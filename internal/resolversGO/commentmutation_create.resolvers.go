package runtime

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"friend_graphql/graph/model"
	"friend_graphql/internal/server"
)

// Create is the resolver for the create field.
func (r *commentMutationResolver) Create(ctx context.Context, obj *model.CommentMutation, input model.NewComment) (model.CommentCreateResult, error) {
	userID, err := server.AuthorizationCheck(ctx)
	if err != nil {
		return model.UnauthorizedError{Message: err.Error()}, nil
	}
	result, err := r.PostCommentDomain.UploadCommentKafka(&input, userID)
	if err != nil {
		return model.UnauthorizedError{Message: err.Error()}, nil
	}
	return model.CommentOk{CommentID: result}, nil
}
